{
	"id": "a4ef1d730909e955a2e72344a789851f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"test/test3.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nstruct bigint {\r\n    uint[] limbs;\r\n}\r\n\r\nlibrary BigInt {\r\n\r\n    function fromUint(uint x) internal pure returns (bigint memory r){\r\n        r.limbs = new uint[](1);\r\n        r.limbs[0] = x;\r\n    } \r\n\r\n    function add(bigint memory a, bigint memory b) internal pure returns(bigint memory r) {\r\n         r.limbs = new uint[](max(a.limbs.length,b.limbs.length));\r\n         uint carry = 0;\r\n         for(uint i=0; i < r.limbs.length; ++i){\r\n            uint limbA = limb(a,i);\r\n            uint limbB = limb(b,i);\r\n            unchecked  {\r\n                r.limbs[i] = limbA + limbB + carry;\r\n                if(limbA + limbB < limbA || (limbA + limbB == type(uint).max && carry >0)){\r\n                    carry = 1;\r\n                }else{\r\n                    carry = 0;\r\n                }\r\n            }\r\n         }\r\n         if(carry > 0){\r\n            uint[] memory newLimbs = new uint[](r.limbs.length + 1);\r\n            uint i;\r\n            for (i=0; i < r.limbs.length; ++i) \r\n            {\r\n               newLimbs[i] = r.limbs[i];   \r\n            }\r\n            newLimbs[i] = carry;\r\n            r.limbs = newLimbs;\r\n         }\r\n    }\r\n\r\n\r\n    function limb(bigint memory a, uint index) internal pure returns (uint) {\r\n        return index < a.limbs.length ? a.limbs[index] : 0;\r\n    }\r\n\r\n\r\n    function max(uint a, uint b) private pure returns(uint) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n}\r\n\r\ncontract C {\r\n    using BigInt for bigint;\r\n    function f() public pure {\r\n        bigint memory x = BigInt.fromUint(7);\r\n        bigint memory y = BigInt.fromUint(type(uint).max);\r\n        bigint memory z = x.add(y);\r\n        assert(z.limb(1) > 0);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"test/test3.sol": {
				"BigInt": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/test3.sol\":101:1464  library BigInt {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/test3.sol\":101:1464  library BigInt {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212201354d93c89fa38939942f16142e026c653061bc782fdff1c79c26834cb37a37a64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201354d93c89fa38939942f16142e026c653061bc782fdff1c79c26834cb37a37a64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT SLOAD 0xD9 EXTCODECOPY DUP10 STATICCALL CODESIZE SWAP4 SWAP10 TIMESTAMP CALL PUSH2 0x42E0 0x26 0xC6 MSTORE8 MOD SHL 0xC7 DUP3 REVERT SELFDESTRUCT SHR PUSH26 0xC26834CB37A37A64736F6C634300081C00330000000000000000 ",
							"sourceMap": "101:1363:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201354d93c89fa38939942f16142e026c653061bc782fdff1c79c26834cb37a37a64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT SLOAD 0xD9 EXTCODECOPY DUP10 STATICCALL CODESIZE SWAP4 SWAP10 TIMESTAMP CALL PUSH2 0x42E0 0x26 0xC6 MSTORE8 MOD SHL 0xC7 DUP3 REVERT SELFDESTRUCT SHR PUSH26 0xC26834CB37A37A64736F6C634300081C00330000000000000000 ",
							"sourceMap": "101:1363:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(struct bigint memory,struct bigint memory)": "infinite",
								"fromUint(uint256)": "infinite",
								"limb(struct bigint memory,uint256)": "infinite",
								"max(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 101,
									"end": 1464,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201354d93c89fa38939942f16142e026c653061bc782fdff1c79c26834cb37a37a64736f6c634300081c0033",
									".code": [
										{
											"begin": 101,
											"end": 1464,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 101,
											"end": 1464,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 101,
											"end": 1464,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 101,
											"end": 1464,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 101,
											"end": 1464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 101,
											"end": 1464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 101,
											"end": 1464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 101,
											"end": 1464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 101,
											"end": 1464,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"test/test3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/test3.sol\":\"BigInt\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/test3.sol\":{\"keccak256\":\"0x9f5851aceb1d4bfa48b13b972d0c1048ef3b4e3950135842952bae3a28b42806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://448aa83db05ea86dab1174435b4dacbd663e6308311cdcd04c0a674a49f9f498\",\"dweb:/ipfs/QmSbksPMQNwxcpCjcnLbBPHHHwoURGVCayq9ejmZZJtJD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"C": {
					"abi": [
						{
							"inputs": [],
							"name": "f",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/test3.sol\":1468:1728  contract C {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/test3.sol\":1468:1728  contract C {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x26121ff0\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"test/test3.sol\":1516:1725  function f() public pure {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"test/test3.sol\":1552:1567  bigint memory x */\n      0x00\n        /* \"test/test3.sol\":1570:1588  BigInt.fromUint(7) */\n      tag_7\n        /* \"test/test3.sol\":1586:1587  7 */\n      0x07\n        /* \"test/test3.sol\":1570:1585  BigInt.fromUint */\n      tag_8\n        /* \"test/test3.sol\":1570:1588  BigInt.fromUint(7) */\n      jump\t// in\n    tag_7:\n        /* \"test/test3.sol\":1552:1588  bigint memory x = BigInt.fromUint(7) */\n      swap1\n      pop\n        /* \"test/test3.sol\":1599:1614  bigint memory y */\n      0x00\n        /* \"test/test3.sol\":1617:1648  BigInt.fromUint(type(uint).max) */\n      tag_9\n        /* \"test/test3.sol\":1633:1647  type(uint).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"test/test3.sol\":1617:1632  BigInt.fromUint */\n      tag_8\n        /* \"test/test3.sol\":1617:1648  BigInt.fromUint(type(uint).max) */\n      jump\t// in\n    tag_9:\n        /* \"test/test3.sol\":1599:1648  bigint memory y = BigInt.fromUint(type(uint).max) */\n      swap1\n      pop\n        /* \"test/test3.sol\":1659:1674  bigint memory z */\n      0x00\n        /* \"test/test3.sol\":1677:1685  x.add(y) */\n      tag_10\n        /* \"test/test3.sol\":1683:1684  y */\n      dup3\n        /* \"test/test3.sol\":1677:1678  x */\n      dup5\n        /* \"test/test3.sol\":1677:1682  x.add */\n      tag_11\n      swap1\n        /* \"test/test3.sol\":1677:1685  x.add(y) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_10:\n        /* \"test/test3.sol\":1659:1685  bigint memory z = x.add(y) */\n      swap1\n      pop\n        /* \"test/test3.sol\":1715:1716  0 */\n      0x00\n        /* \"test/test3.sol\":1703:1712  z.limb(1) */\n      tag_12\n        /* \"test/test3.sol\":1710:1711  1 */\n      0x01\n        /* \"test/test3.sol\":1703:1704  z */\n      dup4\n        /* \"test/test3.sol\":1703:1709  z.limb */\n      tag_13\n      swap1\n        /* \"test/test3.sol\":1703:1712  z.limb(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_12:\n        /* \"test/test3.sol\":1703:1716  z.limb(1) > 0 */\n      gt\n        /* \"test/test3.sol\":1696:1717  assert(z.limb(1) > 0) */\n      tag_14\n      jumpi\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n    tag_14:\n        /* \"test/test3.sol\":1541:1725  {... */\n      pop\n      pop\n      pop\n        /* \"test/test3.sol\":1516:1725  function f() public pure {... */\n      jump\t// out\n        /* \"test/test3.sol\":125:257  function fromUint(uint x) internal pure returns (bigint memory r){... */\n    tag_8:\n        /* \"test/test3.sol\":174:189  bigint memory r */\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"test/test3.sol\":222:223  1 */\n      0x01\n        /* \"test/test3.sol\":211:224  new uint[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n    tag_20:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_23:\n      pop\n        /* \"test/test3.sol\":201:202  r */\n      dup2\n        /* \"test/test3.sol\":201:208  r.limbs */\n      0x00\n      add\n        /* \"test/test3.sol\":201:224  r.limbs = new uint[](1) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"test/test3.sol\":248:249  x */\n      dup2\n        /* \"test/test3.sol\":235:236  r */\n      dup2\n        /* \"test/test3.sol\":235:242  r.limbs */\n      0x00\n      add\n      mload\n        /* \"test/test3.sol\":243:244  0 */\n      0x00\n        /* \"test/test3.sol\":235:245  r.limbs[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_24\n      jumpi\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n    tag_24:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"test/test3.sol\":235:249  r.limbs[0] = x */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"test/test3.sol\":125:257  function fromUint(uint x) internal pure returns (bigint memory r){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"test/test3.sol\":266:1203  function add(bigint memory a, bigint memory b) internal pure returns(bigint memory r) {... */\n    tag_11:\n        /* \"test/test3.sol\":335:350  bigint memory r */\n      tag_27\n      tag_18\n      jump\t// in\n    tag_27:\n        /* \"test/test3.sol\":385:419  max(a.limbs.length,b.limbs.length) */\n      tag_29\n        /* \"test/test3.sol\":389:390  a */\n      dup4\n        /* \"test/test3.sol\":389:396  a.limbs */\n      0x00\n      add\n      mload\n        /* \"test/test3.sol\":389:403  a.limbs.length */\n      mload\n        /* \"test/test3.sol\":404:405  b */\n      dup4\n        /* \"test/test3.sol\":404:411  b.limbs */\n      0x00\n      add\n      mload\n        /* \"test/test3.sol\":404:418  b.limbs.length */\n      mload\n        /* \"test/test3.sol\":385:388  max */\n      tag_30\n        /* \"test/test3.sol\":385:419  max(a.limbs.length,b.limbs.length) */\n      jump\t// in\n    tag_29:\n        /* \"test/test3.sol\":374:420  new uint[](max(a.limbs.length,b.limbs.length)) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_31\n      jumpi\n      tag_32\n      tag_22\n      jump\t// in\n    tag_32:\n    tag_31:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_33:\n      pop\n        /* \"test/test3.sol\":364:365  r */\n      dup2\n        /* \"test/test3.sol\":364:371  r.limbs */\n      0x00\n      add\n        /* \"test/test3.sol\":364:420  r.limbs = new uint[](max(a.limbs.length,b.limbs.length)) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"test/test3.sol\":432:442  uint carry */\n      0x00\n        /* \"test/test3.sol\":445:446  0 */\n      0x00\n        /* \"test/test3.sol\":432:446  uint carry = 0 */\n      swap1\n      pop\n        /* \"test/test3.sol\":462:468  uint i */\n      0x00\n        /* \"test/test3.sol\":469:470  0 */\n      0x00\n        /* \"test/test3.sol\":462:470  uint i=0 */\n      swap1\n      pop\n        /* \"test/test3.sol\":458:877  for(uint i=0; i < r.limbs.length; ++i){... */\n    tag_34:\n        /* \"test/test3.sol\":476:477  r */\n      dup3\n        /* \"test/test3.sol\":476:483  r.limbs */\n      0x00\n      add\n      mload\n        /* \"test/test3.sol\":476:490  r.limbs.length */\n      mload\n        /* \"test/test3.sol\":472:473  i */\n      dup2\n        /* \"test/test3.sol\":472:490  i < r.limbs.length */\n      lt\n        /* \"test/test3.sol\":458:877  for(uint i=0; i < r.limbs.length; ++i){... */\n      iszero\n      tag_35\n      jumpi\n        /* \"test/test3.sol\":511:521  uint limbA */\n      0x00\n        /* \"test/test3.sol\":524:533  limb(a,i) */\n      tag_37\n        /* \"test/test3.sol\":529:530  a */\n      dup7\n        /* \"test/test3.sol\":531:532  i */\n      dup4\n        /* \"test/test3.sol\":524:528  limb */\n      tag_13\n        /* \"test/test3.sol\":524:533  limb(a,i) */\n      jump\t// in\n    tag_37:\n        /* \"test/test3.sol\":511:533  uint limbA = limb(a,i) */\n      swap1\n      pop\n        /* \"test/test3.sol\":548:558  uint limbB */\n      0x00\n        /* \"test/test3.sol\":561:570  limb(b,i) */\n      tag_38\n        /* \"test/test3.sol\":566:567  b */\n      dup7\n        /* \"test/test3.sol\":568:569  i */\n      dup5\n        /* \"test/test3.sol\":561:565  limb */\n      tag_13\n        /* \"test/test3.sol\":561:570  limb(b,i) */\n      jump\t// in\n    tag_38:\n        /* \"test/test3.sol\":548:570  uint limbB = limb(b,i) */\n      swap1\n      pop\n        /* \"test/test3.sol\":644:649  carry */\n      dup4\n        /* \"test/test3.sol\":636:641  limbB */\n      dup2\n        /* \"test/test3.sol\":628:633  limbA */\n      dup4\n        /* \"test/test3.sol\":628:641  limbA + limbB */\n      add\n        /* \"test/test3.sol\":628:649  limbA + limbB + carry */\n      add\n        /* \"test/test3.sol\":615:616  r */\n      dup6\n        /* \"test/test3.sol\":615:622  r.limbs */\n      0x00\n      add\n      mload\n        /* \"test/test3.sol\":623:624  i */\n      dup5\n        /* \"test/test3.sol\":615:625  r.limbs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_39\n      jumpi\n      tag_40\n      tag_26\n      jump\t// in\n    tag_40:\n    tag_39:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"test/test3.sol\":615:649  r.limbs[i] = limbA + limbB + carry */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"test/test3.sol\":687:692  limbA */\n      dup2\n        /* \"test/test3.sol\":679:684  limbB */\n      dup2\n        /* \"test/test3.sol\":671:676  limbA */\n      dup4\n        /* \"test/test3.sol\":671:684  limbA + limbB */\n      add\n        /* \"test/test3.sol\":671:692  limbA + limbB < limbA */\n      lt\n        /* \"test/test3.sol\":671:741  limbA + limbB < limbA || (limbA + limbB == type(uint).max && carry >0) */\n      dup1\n      tag_41\n      jumpi\n      pop\n        /* \"test/test3.sol\":714:728  type(uint).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"test/test3.sol\":705:710  limbB */\n      dup2\n        /* \"test/test3.sol\":697:702  limbA */\n      dup4\n        /* \"test/test3.sol\":697:710  limbA + limbB */\n      add\n        /* \"test/test3.sol\":697:728  limbA + limbB == type(uint).max */\n      eq\n        /* \"test/test3.sol\":697:740  limbA + limbB == type(uint).max && carry >0 */\n      dup1\n      iszero\n      tag_42\n      jumpi\n      pop\n        /* \"test/test3.sol\":739:740  0 */\n      0x00\n        /* \"test/test3.sol\":732:737  carry */\n      dup5\n        /* \"test/test3.sol\":732:740  carry >0 */\n      gt\n        /* \"test/test3.sol\":697:740  limbA + limbB == type(uint).max && carry >0 */\n    tag_42:\n        /* \"test/test3.sol\":671:741  limbA + limbB < limbA || (limbA + limbB == type(uint).max && carry >0) */\n    tag_41:\n        /* \"test/test3.sol\":668:850  if(limbA + limbB < limbA || (limbA + limbB == type(uint).max && carry >0)){... */\n      iszero\n      tag_43\n      jumpi\n        /* \"test/test3.sol\":773:774  1 */\n      0x01\n        /* \"test/test3.sol\":765:774  carry = 1 */\n      swap4\n      pop\n        /* \"test/test3.sol\":668:850  if(limbA + limbB < limbA || (limbA + limbB == type(uint).max && carry >0)){... */\n      jump(tag_44)\n    tag_43:\n        /* \"test/test3.sol\":829:830  0 */\n      0x00\n        /* \"test/test3.sol\":821:830  carry = 0 */\n      swap4\n      pop\n        /* \"test/test3.sol\":668:850  if(limbA + limbB < limbA || (limbA + limbB == type(uint).max && carry >0)){... */\n    tag_44:\n        /* \"test/test3.sol\":496:877  {... */\n      pop\n      pop\n        /* \"test/test3.sol\":492:495  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"test/test3.sol\":458:877  for(uint i=0; i < r.limbs.length; ++i){... */\n      jump(tag_34)\n    tag_35:\n      pop\n        /* \"test/test3.sol\":899:900  0 */\n      0x00\n        /* \"test/test3.sol\":891:896  carry */\n      dup2\n        /* \"test/test3.sol\":891:900  carry > 0 */\n      gt\n        /* \"test/test3.sol\":888:1196  if(carry > 0){... */\n      iszero\n      tag_45\n      jumpi\n        /* \"test/test3.sol\":916:938  uint[] memory newLimbs */\n      0x00\n        /* \"test/test3.sol\":969:970  1 */\n      0x01\n        /* \"test/test3.sol\":952:953  r */\n      dup4\n        /* \"test/test3.sol\":952:959  r.limbs */\n      0x00\n      add\n      mload\n        /* \"test/test3.sol\":952:966  r.limbs.length */\n      mload\n        /* \"test/test3.sol\":952:970  r.limbs.length + 1 */\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"test/test3.sol\":941:971  new uint[](r.limbs.length + 1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_48\n      jumpi\n      tag_49\n      tag_22\n      jump\t// in\n    tag_49:\n    tag_48:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_50\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_50:\n      pop\n        /* \"test/test3.sol\":916:971  uint[] memory newLimbs = new uint[](r.limbs.length + 1) */\n      swap1\n      pop\n        /* \"test/test3.sol\":986:992  uint i */\n      0x00\n        /* \"test/test3.sol\":1014:1015  0 */\n      0x00\n        /* \"test/test3.sol\":1012:1015  i=0 */\n      swap1\n      pop\n        /* \"test/test3.sol\":1007:1117  for (i=0; i < r.limbs.length; ++i) ... */\n    tag_51:\n        /* \"test/test3.sol\":1021:1022  r */\n      dup4\n        /* \"test/test3.sol\":1021:1028  r.limbs */\n      0x00\n      add\n      mload\n        /* \"test/test3.sol\":1021:1035  r.limbs.length */\n      mload\n        /* \"test/test3.sol\":1017:1018  i */\n      dup2\n        /* \"test/test3.sol\":1017:1035  i < r.limbs.length */\n      lt\n        /* \"test/test3.sol\":1007:1117  for (i=0; i < r.limbs.length; ++i) ... */\n      iszero\n      tag_52\n      jumpi\n        /* \"test/test3.sol\":1088:1089  r */\n      dup4\n        /* \"test/test3.sol\":1088:1095  r.limbs */\n      0x00\n      add\n      mload\n        /* \"test/test3.sol\":1096:1097  i */\n      dup2\n        /* \"test/test3.sol\":1088:1098  r.limbs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_54\n      jumpi\n      tag_55\n      tag_26\n      jump\t// in\n    tag_55:\n    tag_54:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"test/test3.sol\":1074:1082  newLimbs */\n      dup3\n        /* \"test/test3.sol\":1083:1084  i */\n      dup3\n        /* \"test/test3.sol\":1074:1085  newLimbs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_56\n      jumpi\n      tag_57\n      tag_26\n      jump\t// in\n    tag_57:\n    tag_56:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"test/test3.sol\":1074:1098  newLimbs[i] = r.limbs[i] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"test/test3.sol\":1037:1040  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"test/test3.sol\":1007:1117  for (i=0; i < r.limbs.length; ++i) ... */\n      jump(tag_51)\n    tag_52:\n        /* \"test/test3.sol\":1145:1150  carry */\n      dup3\n        /* \"test/test3.sol\":1131:1139  newLimbs */\n      dup3\n        /* \"test/test3.sol\":1140:1141  i */\n      dup3\n        /* \"test/test3.sol\":1131:1142  newLimbs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_58\n      jumpi\n      tag_59\n      tag_26\n      jump\t// in\n    tag_59:\n    tag_58:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"test/test3.sol\":1131:1150  newLimbs[i] = carry */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"test/test3.sol\":1175:1183  newLimbs */\n      dup2\n        /* \"test/test3.sol\":1165:1166  r */\n      dup5\n        /* \"test/test3.sol\":1165:1172  r.limbs */\n      0x00\n      add\n        /* \"test/test3.sol\":1165:1183  r.limbs = newLimbs */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"test/test3.sol\":901:1196  {... */\n      pop\n      pop\n        /* \"test/test3.sol\":888:1196  if(carry > 0){... */\n    tag_45:\n        /* \"test/test3.sol\":352:1203  {... */\n      pop\n        /* \"test/test3.sol\":266:1203  function add(bigint memory a, bigint memory b) internal pure returns(bigint memory r) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"test/test3.sol\":1213:1354  function limb(bigint memory a, uint index) internal pure returns (uint) {... */\n    tag_13:\n        /* \"test/test3.sol\":1279:1283  uint */\n      0x00\n        /* \"test/test3.sol\":1311:1312  a */\n      dup3\n        /* \"test/test3.sol\":1311:1318  a.limbs */\n      0x00\n      add\n      mload\n        /* \"test/test3.sol\":1311:1325  a.limbs.length */\n      mload\n        /* \"test/test3.sol\":1303:1308  index */\n      dup3\n        /* \"test/test3.sol\":1303:1325  index < a.limbs.length */\n      lt\n        /* \"test/test3.sol\":1303:1346  index < a.limbs.length ? a.limbs[index] : 0 */\n      tag_61\n      jumpi\n        /* \"test/test3.sol\":1345:1346  0 */\n      0x00\n        /* \"test/test3.sol\":1303:1346  index < a.limbs.length ? a.limbs[index] : 0 */\n      jump(tag_62)\n    tag_61:\n        /* \"test/test3.sol\":1328:1329  a */\n      dup3\n        /* \"test/test3.sol\":1328:1335  a.limbs */\n      0x00\n      add\n      mload\n        /* \"test/test3.sol\":1336:1341  index */\n      dup3\n        /* \"test/test3.sol\":1328:1342  a.limbs[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_63\n      jumpi\n      tag_64\n      tag_26\n      jump\t// in\n    tag_64:\n    tag_63:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"test/test3.sol\":1303:1346  index < a.limbs.length ? a.limbs[index] : 0 */\n    tag_62:\n        /* \"test/test3.sol\":1296:1346  return index < a.limbs.length ? a.limbs[index] : 0 */\n      swap1\n      pop\n        /* \"test/test3.sol\":1213:1354  function limb(bigint memory a, uint index) internal pure returns (uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"test/test3.sol\":1364:1459  function max(uint a, uint b) private pure returns(uint) {... */\n    tag_30:\n        /* \"test/test3.sol\":1414:1418  uint */\n      0x00\n        /* \"test/test3.sol\":1442:1443  b */\n      dup2\n        /* \"test/test3.sol\":1438:1439  a */\n      dup4\n        /* \"test/test3.sol\":1438:1443  a > b */\n      gt\n        /* \"test/test3.sol\":1438:1451  a > b ? a : b */\n      tag_66\n      jumpi\n        /* \"test/test3.sol\":1450:1451  b */\n      dup2\n        /* \"test/test3.sol\":1438:1451  a > b ? a : b */\n      jump(tag_67)\n    tag_66:\n        /* \"test/test3.sol\":1446:1447  a */\n      dup3\n        /* \"test/test3.sol\":1438:1451  a > b ? a : b */\n    tag_67:\n        /* \"test/test3.sol\":1431:1451  return a > b ? a : b */\n      swap1\n      pop\n        /* \"test/test3.sol\":1364:1459  function max(uint a, uint b) private pure returns(uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_18:\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_16:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x01\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:373   */\n    tag_22:\n        /* \"#utility.yul\":241:318   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":238:239   */\n      0x00\n        /* \"#utility.yul\":231:319   */\n      mstore\n        /* \"#utility.yul\":338:342   */\n      0x41\n        /* \"#utility.yul\":335:336   */\n      0x04\n        /* \"#utility.yul\":328:343   */\n      mstore\n        /* \"#utility.yul\":362:366   */\n      0x24\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":352:367   */\n      revert\n        /* \"#utility.yul\":379:559   */\n    tag_26:\n        /* \"#utility.yul\":427:504   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":424:425   */\n      0x00\n        /* \"#utility.yul\":417:505   */\n      mstore\n        /* \"#utility.yul\":524:528   */\n      0x32\n        /* \"#utility.yul\":521:522   */\n      0x04\n        /* \"#utility.yul\":514:529   */\n      mstore\n        /* \"#utility.yul\":548:552   */\n      0x24\n        /* \"#utility.yul\":545:546   */\n      0x00\n        /* \"#utility.yul\":538:553   */\n      revert\n        /* \"#utility.yul\":565:642   */\n    tag_68:\n        /* \"#utility.yul\":602:609   */\n      0x00\n        /* \"#utility.yul\":631:636   */\n      dup2\n        /* \"#utility.yul\":620:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":565:642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:828   */\n    tag_69:\n        /* \"#utility.yul\":696:773   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":693:694   */\n      0x00\n        /* \"#utility.yul\":686:774   */\n      mstore\n        /* \"#utility.yul\":793:797   */\n      0x11\n        /* \"#utility.yul\":790:791   */\n      0x04\n        /* \"#utility.yul\":783:798   */\n      mstore\n        /* \"#utility.yul\":817:821   */\n      0x24\n        /* \"#utility.yul\":814:815   */\n      0x00\n        /* \"#utility.yul\":807:822   */\n      revert\n        /* \"#utility.yul\":834:1025   */\n    tag_47:\n        /* \"#utility.yul\":874:877   */\n      0x00\n        /* \"#utility.yul\":893:913   */\n      tag_77\n        /* \"#utility.yul\":911:912   */\n      dup3\n        /* \"#utility.yul\":893:913   */\n      tag_68\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":888:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":927:947   */\n      tag_78\n        /* \"#utility.yul\":945:946   */\n      dup4\n        /* \"#utility.yul\":927:947   */\n      tag_68\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":922:947   */\n      swap3\n      pop\n        /* \"#utility.yul\":970:971   */\n      dup3\n        /* \"#utility.yul\":967:968   */\n      dup3\n        /* \"#utility.yul\":963:972   */\n      add\n        /* \"#utility.yul\":956:972   */\n      swap1\n      pop\n        /* \"#utility.yul\":991:994   */\n      dup1\n        /* \"#utility.yul\":988:989   */\n      dup3\n        /* \"#utility.yul\":985:995   */\n      gt\n        /* \"#utility.yul\":982:1018   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":998:1016   */\n      tag_80\n      tag_69\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":982:1018   */\n    tag_79:\n        /* \"#utility.yul\":834:1025   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206fbc3958f6d6afec99827d33fbc71e22374372837ed43daf27952b48315c3afa64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506104c38061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c806326121ff01461002d575b5f5ffd5b610035610037565b005b5f61004260076100ae565b90505f61006e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6100ae565b90505f610084828461012f90919063ffffffff16565b90505f61009b60018361033990919063ffffffff16565b116100a9576100a861039d565b5b505050565b6100b661038a565b600167ffffffffffffffff8111156100d1576100d06103ca565b5b6040519080825280602002602001820160405280156100ff5781602001602082028036833780820191505090505b50815f018190525081815f01515f8151811061011e5761011d6103f7565b5b602002602001018181525050919050565b61013761038a565b610149835f015151835f015151610372565b67ffffffffffffffff811115610162576101616103ca565b5b6040519080825280602002602001820160405280156101905781602001602082028036833780820191505090505b50815f01819052505f5f90505f5f90505b825f015151811015610249575f6101b88683610339565b90505f6101c58684610339565b90508381830101855f015184815181106101e2576101e16103f7565b5b60200260200101818152505081818301108061022a57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81830114801561022957505f84115b5b15610238576001935061023c565b5f93505b50508060010190506101a1565b505f811115610332575f6001835f015151610264919061045a565b67ffffffffffffffff81111561027d5761027c6103ca565b5b6040519080825280602002602001820160405280156102ab5781602001602082028036833780820191505090505b5090505f5f90505b835f01515181101561030757835f015181815181106102d5576102d46103f7565b5b60200260200101518282815181106102f0576102ef6103f7565b5b6020026020010181815250508060010190506102b3565b8282828151811061031b5761031a6103f7565b5b60200260200101818152505081845f018190525050505b5092915050565b5f825f015151821061034b575f61036a565b825f01518281518110610361576103606103f7565b5b60200260200101515b905092915050565b5f8183116103805781610382565b825b905092915050565b6040518060200160405280606081525090565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61046482610424565b915061046f83610424565b92508282019050808211156104875761048661042d565b5b9291505056fea26469706673582212206fbc3958f6d6afec99827d33fbc71e22374372837ed43daf27952b48315c3afa64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4C3 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26121FF0 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x37 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x42 PUSH1 0x7 PUSH2 0xAE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x84 DUP3 DUP5 PUSH2 0x12F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9B PUSH1 0x1 DUP4 PUSH2 0x339 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT PUSH2 0xA9 JUMPI PUSH2 0xA8 PUSH2 0x39D JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD1 JUMPI PUSH2 0xD0 PUSH2 0x3CA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 PUSH0 ADD DUP2 SWAP1 MSTORE POP DUP2 DUP2 PUSH0 ADD MLOAD PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x11E JUMPI PUSH2 0x11D PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137 PUSH2 0x38A JUMP JUMPDEST PUSH2 0x149 DUP4 PUSH0 ADD MLOAD MLOAD DUP4 PUSH0 ADD MLOAD MLOAD PUSH2 0x372 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x162 JUMPI PUSH2 0x161 PUSH2 0x3CA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x190 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 PUSH0 ADD DUP2 SWAP1 MSTORE POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 PUSH0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH0 PUSH2 0x1B8 DUP7 DUP4 PUSH2 0x339 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1C5 DUP7 DUP5 PUSH2 0x339 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 DUP4 ADD ADD DUP6 PUSH0 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1E2 JUMPI PUSH2 0x1E1 PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 DUP4 ADD LT DUP1 PUSH2 0x22A JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP4 ADD EQ DUP1 ISZERO PUSH2 0x229 JUMPI POP PUSH0 DUP5 GT JUMPDEST JUMPDEST ISZERO PUSH2 0x238 JUMPI PUSH1 0x1 SWAP4 POP PUSH2 0x23C JUMP JUMPDEST PUSH0 SWAP4 POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1A1 JUMP JUMPDEST POP PUSH0 DUP2 GT ISZERO PUSH2 0x332 JUMPI PUSH0 PUSH1 0x1 DUP4 PUSH0 ADD MLOAD MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27D JUMPI PUSH2 0x27C PUSH2 0x3CA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 PUSH0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x307 JUMPI DUP4 PUSH0 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D5 JUMPI PUSH2 0x2D4 PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2F0 JUMPI PUSH2 0x2EF PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2B3 JUMP JUMPDEST DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x31B JUMPI PUSH2 0x31A PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP5 PUSH0 ADD DUP2 SWAP1 MSTORE POP POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD MLOAD MLOAD DUP3 LT PUSH2 0x34B JUMPI PUSH0 PUSH2 0x36A JUMP JUMPDEST DUP3 PUSH0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x361 JUMPI PUSH2 0x360 PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT PUSH2 0x380 JUMPI DUP2 PUSH2 0x382 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x464 DUP3 PUSH2 0x424 JUMP JUMPDEST SWAP2 POP PUSH2 0x46F DUP4 PUSH2 0x424 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x42D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xBC3958F6D6AFEC99827D33FBC71E2237 NUMBER PUSH19 0x837ED43DAF27952B48315C3AFA64736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "1468:260:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_196": {
									"entryPoint": 303,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@f_282": {
									"entryPoint": 55,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fromUint_32": {
									"entryPoint": 174,
									"id": 32,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@limb_219": {
									"entryPoint": 825,
									"id": 219,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@max_236": {
									"entryPoint": 882,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1028:1",
										"nodeType": "YulBlock",
										"src": "0:1028:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:1",
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:1",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:1",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nativeSrc": "45:88:1",
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nativeSrc": "45:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:1",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:1",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nativeSrc": "142:15:1",
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nativeSrc": "142:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:1",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:1",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:15:1",
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nativeSrc": "166:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nativeSrc": "7:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nativeSrc": "221:152:1",
													"nodeType": "YulBlock",
													"src": "221:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "238:1:1",
																		"nodeType": "YulLiteral",
																		"src": "238:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "241:77:1",
																		"nodeType": "YulLiteral",
																		"src": "241:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "231:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:1"
																},
																"nativeSrc": "231:88:1",
																"nodeType": "YulFunctionCall",
																"src": "231:88:1"
															},
															"nativeSrc": "231:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "231:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "335:1:1",
																		"nodeType": "YulLiteral",
																		"src": "335:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "338:4:1",
																		"nodeType": "YulLiteral",
																		"src": "338:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "328:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "328:6:1"
																},
																"nativeSrc": "328:15:1",
																"nodeType": "YulFunctionCall",
																"src": "328:15:1"
															},
															"nativeSrc": "328:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "328:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "359:1:1",
																		"nodeType": "YulLiteral",
																		"src": "359:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "362:4:1",
																		"nodeType": "YulLiteral",
																		"src": "362:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "352:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "352:6:1"
																},
																"nativeSrc": "352:15:1",
																"nodeType": "YulFunctionCall",
																"src": "352:15:1"
															},
															"nativeSrc": "352:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "352:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "193:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "193:180:1"
											},
											{
												"body": {
													"nativeSrc": "407:152:1",
													"nodeType": "YulBlock",
													"src": "407:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "424:1:1",
																		"nodeType": "YulLiteral",
																		"src": "424:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "427:77:1",
																		"nodeType": "YulLiteral",
																		"src": "427:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "417:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:1"
																},
																"nativeSrc": "417:88:1",
																"nodeType": "YulFunctionCall",
																"src": "417:88:1"
															},
															"nativeSrc": "417:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "417:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "521:1:1",
																		"nodeType": "YulLiteral",
																		"src": "521:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "524:4:1",
																		"nodeType": "YulLiteral",
																		"src": "524:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "514:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "514:6:1"
																},
																"nativeSrc": "514:15:1",
																"nodeType": "YulFunctionCall",
																"src": "514:15:1"
															},
															"nativeSrc": "514:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "514:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "545:1:1",
																		"nodeType": "YulLiteral",
																		"src": "545:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "548:4:1",
																		"nodeType": "YulLiteral",
																		"src": "548:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "538:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "538:6:1"
																},
																"nativeSrc": "538:15:1",
																"nodeType": "YulFunctionCall",
																"src": "538:15:1"
															},
															"nativeSrc": "538:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "538:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "379:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "379:180:1"
											},
											{
												"body": {
													"nativeSrc": "610:32:1",
													"nodeType": "YulBlock",
													"src": "610:32:1",
													"statements": [
														{
															"nativeSrc": "620:16:1",
															"nodeType": "YulAssignment",
															"src": "620:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "631:5:1",
																"nodeType": "YulIdentifier",
																"src": "631:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "620:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "565:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "592:5:1",
														"nodeType": "YulTypedName",
														"src": "592:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "602:7:1",
														"nodeType": "YulTypedName",
														"src": "602:7:1",
														"type": ""
													}
												],
												"src": "565:77:1"
											},
											{
												"body": {
													"nativeSrc": "676:152:1",
													"nodeType": "YulBlock",
													"src": "676:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "693:1:1",
																		"nodeType": "YulLiteral",
																		"src": "693:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "696:77:1",
																		"nodeType": "YulLiteral",
																		"src": "696:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "686:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "686:6:1"
																},
																"nativeSrc": "686:88:1",
																"nodeType": "YulFunctionCall",
																"src": "686:88:1"
															},
															"nativeSrc": "686:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "686:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "790:1:1",
																		"nodeType": "YulLiteral",
																		"src": "790:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "793:4:1",
																		"nodeType": "YulLiteral",
																		"src": "793:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "783:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "783:6:1"
																},
																"nativeSrc": "783:15:1",
																"nodeType": "YulFunctionCall",
																"src": "783:15:1"
															},
															"nativeSrc": "783:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "783:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "814:1:1",
																		"nodeType": "YulLiteral",
																		"src": "814:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "817:4:1",
																		"nodeType": "YulLiteral",
																		"src": "817:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "807:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "807:6:1"
																},
																"nativeSrc": "807:15:1",
																"nodeType": "YulFunctionCall",
																"src": "807:15:1"
															},
															"nativeSrc": "807:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "807:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "648:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "648:180:1"
											},
											{
												"body": {
													"nativeSrc": "878:147:1",
													"nodeType": "YulBlock",
													"src": "878:147:1",
													"statements": [
														{
															"nativeSrc": "888:25:1",
															"nodeType": "YulAssignment",
															"src": "888:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "911:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "911:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "893:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "893:17:1"
																},
																"nativeSrc": "893:20:1",
																"nodeType": "YulFunctionCall",
																"src": "893:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "888:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "888:1:1"
																}
															]
														},
														{
															"nativeSrc": "922:25:1",
															"nodeType": "YulAssignment",
															"src": "922:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "945:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "945:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "927:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "927:17:1"
																},
																"nativeSrc": "927:20:1",
																"nodeType": "YulFunctionCall",
																"src": "927:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "922:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "922:1:1"
																}
															]
														},
														{
															"nativeSrc": "956:16:1",
															"nodeType": "YulAssignment",
															"src": "956:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "967:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "967:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "970:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "970:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "963:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "963:3:1"
																},
																"nativeSrc": "963:9:1",
																"nodeType": "YulFunctionCall",
																"src": "963:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "956:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "956:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "996:22:1",
																"nodeType": "YulBlock",
																"src": "996:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "998:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "998:16:1"
																			},
																			"nativeSrc": "998:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "998:18:1"
																		},
																		"nativeSrc": "998:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "998:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "988:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "988:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "991:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "991:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "985:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "985:2:1"
																},
																"nativeSrc": "985:10:1",
																"nodeType": "YulFunctionCall",
																"src": "985:10:1"
															},
															"nativeSrc": "982:36:1",
															"nodeType": "YulIf",
															"src": "982:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "834:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "865:1:1",
														"nodeType": "YulTypedName",
														"src": "865:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "868:1:1",
														"nodeType": "YulTypedName",
														"src": "868:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "874:3:1",
														"nodeType": "YulTypedName",
														"src": "874:3:1",
														"type": ""
													}
												],
												"src": "834:191:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c806326121ff01461002d575b5f5ffd5b610035610037565b005b5f61004260076100ae565b90505f61006e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6100ae565b90505f610084828461012f90919063ffffffff16565b90505f61009b60018361033990919063ffffffff16565b116100a9576100a861039d565b5b505050565b6100b661038a565b600167ffffffffffffffff8111156100d1576100d06103ca565b5b6040519080825280602002602001820160405280156100ff5781602001602082028036833780820191505090505b50815f018190525081815f01515f8151811061011e5761011d6103f7565b5b602002602001018181525050919050565b61013761038a565b610149835f015151835f015151610372565b67ffffffffffffffff811115610162576101616103ca565b5b6040519080825280602002602001820160405280156101905781602001602082028036833780820191505090505b50815f01819052505f5f90505f5f90505b825f015151811015610249575f6101b88683610339565b90505f6101c58684610339565b90508381830101855f015184815181106101e2576101e16103f7565b5b60200260200101818152505081818301108061022a57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81830114801561022957505f84115b5b15610238576001935061023c565b5f93505b50508060010190506101a1565b505f811115610332575f6001835f015151610264919061045a565b67ffffffffffffffff81111561027d5761027c6103ca565b5b6040519080825280602002602001820160405280156102ab5781602001602082028036833780820191505090505b5090505f5f90505b835f01515181101561030757835f015181815181106102d5576102d46103f7565b5b60200260200101518282815181106102f0576102ef6103f7565b5b6020026020010181815250508060010190506102b3565b8282828151811061031b5761031a6103f7565b5b60200260200101818152505081845f018190525050505b5092915050565b5f825f015151821061034b575f61036a565b825f01518281518110610361576103606103f7565b5b60200260200101515b905092915050565b5f8183116103805781610382565b825b905092915050565b6040518060200160405280606081525090565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61046482610424565b915061046f83610424565b92508282019050808211156104875761048661042d565b5b9291505056fea26469706673582212206fbc3958f6d6afec99827d33fbc71e22374372837ed43daf27952b48315c3afa64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26121FF0 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x37 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x42 PUSH1 0x7 PUSH2 0xAE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x84 DUP3 DUP5 PUSH2 0x12F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9B PUSH1 0x1 DUP4 PUSH2 0x339 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT PUSH2 0xA9 JUMPI PUSH2 0xA8 PUSH2 0x39D JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD1 JUMPI PUSH2 0xD0 PUSH2 0x3CA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 PUSH0 ADD DUP2 SWAP1 MSTORE POP DUP2 DUP2 PUSH0 ADD MLOAD PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x11E JUMPI PUSH2 0x11D PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137 PUSH2 0x38A JUMP JUMPDEST PUSH2 0x149 DUP4 PUSH0 ADD MLOAD MLOAD DUP4 PUSH0 ADD MLOAD MLOAD PUSH2 0x372 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x162 JUMPI PUSH2 0x161 PUSH2 0x3CA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x190 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 PUSH0 ADD DUP2 SWAP1 MSTORE POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 PUSH0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH0 PUSH2 0x1B8 DUP7 DUP4 PUSH2 0x339 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1C5 DUP7 DUP5 PUSH2 0x339 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 DUP4 ADD ADD DUP6 PUSH0 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1E2 JUMPI PUSH2 0x1E1 PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 DUP4 ADD LT DUP1 PUSH2 0x22A JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP4 ADD EQ DUP1 ISZERO PUSH2 0x229 JUMPI POP PUSH0 DUP5 GT JUMPDEST JUMPDEST ISZERO PUSH2 0x238 JUMPI PUSH1 0x1 SWAP4 POP PUSH2 0x23C JUMP JUMPDEST PUSH0 SWAP4 POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1A1 JUMP JUMPDEST POP PUSH0 DUP2 GT ISZERO PUSH2 0x332 JUMPI PUSH0 PUSH1 0x1 DUP4 PUSH0 ADD MLOAD MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27D JUMPI PUSH2 0x27C PUSH2 0x3CA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 PUSH0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x307 JUMPI DUP4 PUSH0 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D5 JUMPI PUSH2 0x2D4 PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2F0 JUMPI PUSH2 0x2EF PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2B3 JUMP JUMPDEST DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x31B JUMPI PUSH2 0x31A PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP5 PUSH0 ADD DUP2 SWAP1 MSTORE POP POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD MLOAD MLOAD DUP3 LT PUSH2 0x34B JUMPI PUSH0 PUSH2 0x36A JUMP JUMPDEST DUP3 PUSH0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x361 JUMPI PUSH2 0x360 PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT PUSH2 0x380 JUMPI DUP2 PUSH2 0x382 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x464 DUP3 PUSH2 0x424 JUMP JUMPDEST SWAP2 POP PUSH2 0x46F DUP4 PUSH2 0x424 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x42D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xBC3958F6D6AFEC99827D33FBC71E2237 NUMBER PUSH19 0x837ED43DAF27952B48315C3AFA64736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "1468:260:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1516:209;;;:::i;:::-;;;1552:15;1570:18;1586:1;1570:15;:18::i;:::-;1552:36;;1599:15;1617:31;1633:14;1617:15;:31::i;:::-;1599:49;;1659:15;1677:8;1683:1;1677;:5;;:8;;;;:::i;:::-;1659:26;;1715:1;1703:9;1710:1;1703;:6;;:9;;;;:::i;:::-;:13;1696:21;;;;:::i;:::-;;1541:184;;;1516:209::o;125:132::-;174:15;;:::i;:::-;222:1;211:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;201:1;:7;;:23;;;;248:1;235;:7;;;243:1;235:10;;;;;;;;:::i;:::-;;;;;;;:14;;;;;125:132;;;:::o;266:937::-;335:15;;:::i;:::-;385:34;389:1;:7;;;:14;404:1;:7;;;:14;385:3;:34::i;:::-;374:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:1;:7;;:56;;;;432:10;445:1;432:14;;462:6;469:1;462:8;;458:419;476:1;:7;;;:14;472:1;:18;458:419;;;511:10;524:9;529:1;531;524:4;:9::i;:::-;511:22;;548:10;561:9;566:1;568;561:4;:9::i;:::-;548:22;;644:5;636;628;:13;:21;615:1;:7;;;623:1;615:10;;;;;;;;:::i;:::-;;;;;;;:34;;;;;687:5;679;671;:13;:21;:70;;;;714:14;705:5;697;:13;:31;:43;;;;;739:1;732:5;:8;697:43;671:70;668:182;;;773:1;765:9;;668:182;;;829:1;821:9;;668:182;496:381;;492:3;;;;;458:419;;;;899:1;891:5;:9;888:308;;;916:22;969:1;952;:7;;;:14;:18;;;;:::i;:::-;941:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;916:55;;986:6;1014:1;1012:3;;1007:110;1021:1;:7;;;:14;1017:1;:18;1007:110;;;1088:1;:7;;;1096:1;1088:10;;;;;;;;:::i;:::-;;;;;;;;1074:8;1083:1;1074:11;;;;;;;;:::i;:::-;;;;;;;:24;;;;;1037:3;;;;;1007:110;;;1145:5;1131:8;1140:1;1131:11;;;;;;;;:::i;:::-;;;;;;;:19;;;;;1175:8;1165:1;:7;;:18;;;;901:295;;888:308;352:851;266:937;;;;:::o;1213:141::-;1279:4;1311:1;:7;;;:14;1303:5;:22;:43;;1345:1;1303:43;;;1328:1;:7;;;1336:5;1328:14;;;;;;;;:::i;:::-;;;;;;;;1303:43;1296:50;;1213:141;;;;:::o;1364:95::-;1414:4;1442:1;1438;:5;:13;;1450:1;1438:13;;;1446:1;1438:13;1431:20;;1364:95;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:180;241:77;238:1;231:88;338:4;335:1;328:15;362:4;359:1;352:15;379:180;427:77;424:1;417:88;524:4;521:1;514:15;548:4;545:1;538:15;565:77;602:7;631:5;620:16;;565:77;;;:::o;648:180::-;696:77;693:1;686:88;793:4;790:1;783:15;817:4;814:1;807:15;834:191;874:3;893:20;911:1;893:20;:::i;:::-;888:25;;927:20;945:1;927:20;:::i;:::-;922:25;;970:1;967;963:9;956:16;;991:3;988:1;985:10;982:36;;;998:18;;:::i;:::-;982:36;834:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "243800",
								"executionCost": "285",
								"totalCost": "244085"
							},
							"external": {
								"f()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1468,
									"end": 1728,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 1728,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206fbc3958f6d6afec99827d33fbc71e22374372837ed43daf27952b48315c3afa64736f6c634300081c0033",
									".code": [
										{
											"begin": 1468,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "26121FF0"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1725,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1516,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1516,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1516,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1725,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1516,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1725,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1725,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1516,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1570,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1570,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1588,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1570,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1633,
											"end": 1647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1617,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1617,
											"end": 1648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1648,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1617,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1677,
											"end": 1685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1685,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1677,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1703,
											"end": 1704,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1696,
											"end": 1717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1696,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1696,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1717,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1696,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1717,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1696,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 125,
											"end": 257,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 125,
											"end": 257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 189,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 211,
											"end": 224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 211,
											"end": 224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 211,
											"end": 224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 235,
											"end": 236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 235,
											"end": 242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 235,
											"end": 242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 243,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 235,
											"end": 245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 235,
											"end": 245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 235,
											"end": 245,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 235,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 235,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 235,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 235,
											"end": 245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 235,
											"end": 245,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 235,
											"end": 245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 235,
											"end": 245,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 235,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 235,
											"end": 245,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 235,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 235,
											"end": 245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 235,
											"end": 245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 235,
											"end": 249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 235,
											"end": 249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 235,
											"end": 249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 235,
											"end": 249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 235,
											"end": 249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 125,
											"end": 257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 125,
											"end": 257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 125,
											"end": 257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 125,
											"end": 257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 266,
											"end": 1203,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 266,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 335,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 335,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 335,
											"end": 350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 335,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 389,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 389,
											"end": 396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 389,
											"end": 403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 404,
											"end": 405,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 404,
											"end": 411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 404,
											"end": 411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 404,
											"end": 418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 385,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 385,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 419,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 385,
											"end": 419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 374,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 364,
											"end": 420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 432,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 432,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 458,
											"end": 877,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 458,
											"end": 877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 476,
											"end": 477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 476,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 476,
											"end": 483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 476,
											"end": 490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 458,
											"end": 877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 458,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 458,
											"end": 877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 511,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 529,
											"end": 530,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 524,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 524,
											"end": 533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 533,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 524,
											"end": 533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 566,
											"end": 567,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 568,
											"end": 569,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 561,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 561,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 561,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 636,
											"end": 641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 628,
											"end": 633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 628,
											"end": 641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 616,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 615,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 623,
											"end": 624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 615,
											"end": 625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 625,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 615,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 615,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 615,
											"end": 625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 615,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 671,
											"end": 676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 671,
											"end": 684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 671,
											"end": 692,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 671,
											"end": 741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 671,
											"end": 741,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 671,
											"end": 741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 705,
											"end": 710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 697,
											"end": 702,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 697,
											"end": 710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 728,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 697,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 697,
											"end": 740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 697,
											"end": 740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 739,
											"end": 740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 737,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 732,
											"end": 740,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 697,
											"end": 740,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 697,
											"end": 740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 671,
											"end": 741,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 671,
											"end": 741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 668,
											"end": 850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 668,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 668,
											"end": 850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 773,
											"end": 774,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 765,
											"end": 774,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 765,
											"end": 774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 668,
											"end": 850,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 850,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 668,
											"end": 850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 829,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 830,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 821,
											"end": 830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 850,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 668,
											"end": 850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 492,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 492,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 492,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 458,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 458,
											"end": 877,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 458,
											"end": 877,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 458,
											"end": 877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 458,
											"end": 877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 899,
											"end": 900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 891,
											"end": 900,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 888,
											"end": 1196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 952,
											"end": 953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 952,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 952,
											"end": 959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 952,
											"end": 966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 952,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 952,
											"end": 970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 952,
											"end": 970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 952,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 952,
											"end": 970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 952,
											"end": 970,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 952,
											"end": 970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 941,
											"end": 971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 941,
											"end": 971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 941,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 941,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 941,
											"end": 971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 941,
											"end": 971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 971,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 941,
											"end": 971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 941,
											"end": 971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 986,
											"end": 992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1117,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1007,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1022,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1035,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1035,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1007,
											"end": 1117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1088,
											"end": 1098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1082,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1074,
											"end": 1085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1040,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1007,
											"end": 1117,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1117,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1007,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1131,
											"end": 1142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 901,
											"end": 1196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 901,
											"end": 1196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1196,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 888,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 352,
											"end": 1203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 266,
											"end": 1203,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 266,
											"end": 1203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 266,
											"end": 1203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 266,
											"end": 1203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 266,
											"end": 1203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1354,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1213,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1325,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1303,
											"end": 1346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1303,
											"end": 1346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1346,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1303,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1328,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1346,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1303,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 1346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 1346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1354,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1459,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1364,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1443,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1459,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 373,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 193,
											"end": 373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 238,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 338,
											"end": 342,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 335,
											"end": 336,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 328,
											"end": 343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 362,
											"end": 366,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 367,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 379,
											"end": 559,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 379,
											"end": 559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 427,
											"end": 504,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 424,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 524,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 521,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 514,
											"end": 529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 548,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 545,
											"end": 546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 553,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 565,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 565,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 602,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 620,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 620,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 565,
											"end": 642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 565,
											"end": 642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 565,
											"end": 642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 828,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 648,
											"end": 828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 773,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 693,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 793,
											"end": 797,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 790,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 783,
											"end": 798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 817,
											"end": 821,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 814,
											"end": 815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 822,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1025,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 834,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 874,
											"end": 877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 911,
											"end": 912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 893,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 893,
											"end": 913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 893,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 888,
											"end": 913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 888,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 927,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 945,
											"end": 946,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 927,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 927,
											"end": 947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 927,
											"end": 947,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 927,
											"end": 947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 922,
											"end": 947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 922,
											"end": 947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 970,
											"end": 971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 967,
											"end": 968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 963,
											"end": 972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 956,
											"end": 972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 956,
											"end": 972,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 991,
											"end": 994,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 988,
											"end": 989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 985,
											"end": 995,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1018,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 982,
											"end": 1018,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 998,
											"end": 1016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1018,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 982,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1025,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"test/test3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"f()": "26121ff0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"f\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/test3.sol\":\"C\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/test3.sol\":{\"keccak256\":\"0x9f5851aceb1d4bfa48b13b972d0c1048ef3b4e3950135842952bae3a28b42806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://448aa83db05ea86dab1174435b4dacbd663e6308311cdcd04c0a674a49f9f498\",\"dweb:/ipfs/QmSbksPMQNwxcpCjcnLbBPHHHwoURGVCayq9ejmZZJtJD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"test/test3.sol": {
				"ast": {
					"absolutePath": "test/test3.sol",
					"exportedSymbols": {
						"BigInt": [
							237
						],
						"C": [
							283
						],
						"bigint": [
							5
						]
					},
					"id": 284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"canonicalName": "bigint",
							"id": 5,
							"members": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "limbs",
									"nameLocation": "88:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 5,
									"src": "81:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "81:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 3,
										"nodeType": "ArrayTypeName",
										"src": "81:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "bigint",
							"nameLocation": "67:6:0",
							"nodeType": "StructDefinition",
							"scope": 284,
							"src": "60:37:0",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BigInt",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "BigInt",
							"nameLocation": "109:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "190:67:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 13,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "201:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																"typeString": "struct bigint memory"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "203:5:0",
														"memberName": "limbs",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "222:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "211:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 16,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "215:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 17,
																"nodeType": "ArrayTypeName",
																"src": "215:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "211:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "201:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "201:23:0"
											},
											{
												"expression": {
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 23,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "235:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																	"typeString": "struct bigint memory"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "237:5:0",
															"memberName": "limbs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "235:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 27,
														"indexExpression": {
															"hexValue": "30",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "243:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "235:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 28,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "248:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "235:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "235:14:0"
											}
										]
									},
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fromUint",
									"nameLocation": "134:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "148:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "143:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "143:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "142:8:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "188:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "174:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
													"typeString": "struct bigint"
												},
												"typeName": {
													"id": 10,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 9,
														"name": "bigint",
														"nameLocations": [
															"174:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "174:6:0"
													},
													"referencedDeclaration": 5,
													"src": "174:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
														"typeString": "struct bigint"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "173:17:0"
									},
									"scope": 237,
									"src": "125:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "352:851:0",
										"statements": [
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 44,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "364:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																"typeString": "struct bigint memory"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "366:5:0",
														"memberName": "limbs",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "364:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"expression": {
																				"id": 51,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 35,
																				"src": "389:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																					"typeString": "struct bigint memory"
																				}
																			},
																			"id": 52,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "391:5:0",
																			"memberName": "limbs",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4,
																			"src": "389:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 53,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "397:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "389:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"expression": {
																				"id": 54,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 38,
																				"src": "404:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																					"typeString": "struct bigint memory"
																				}
																			},
																			"id": 55,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "406:5:0",
																			"memberName": "limbs",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4,
																			"src": "404:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 56,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "412:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "404:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 50,
																	"name": "max",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "385:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "385:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "374:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 47,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "378:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 48,
																"nodeType": "ArrayTypeName",
																"src": "378:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "374:46:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "364:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "364:56:0"
											},
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"mutability": "mutable",
														"name": "carry",
														"nameLocation": "437:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "432:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 61,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "432:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 64,
												"initialValue": {
													"hexValue": "30",
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "445:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "432:14:0"
											},
											{
												"body": {
													"id": 135,
													"nodeType": "Block",
													"src": "496:381:0",
													"statements": [
														{
															"assignments": [
																78
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 78,
																	"mutability": "mutable",
																	"name": "limbA",
																	"nameLocation": "516:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 135,
																	"src": "511:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 77,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "511:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 83,
															"initialValue": {
																"arguments": [
																	{
																		"id": 80,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 35,
																		"src": "529:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																			"typeString": "struct bigint memory"
																		}
																	},
																	{
																		"id": 81,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 66,
																		"src": "531:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																			"typeString": "struct bigint memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 79,
																	"name": "limb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "524:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_bigint_$5_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (struct bigint memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "524:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "511:22:0"
														},
														{
															"assignments": [
																85
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 85,
																	"mutability": "mutable",
																	"name": "limbB",
																	"nameLocation": "553:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 135,
																	"src": "548:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 84,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "548:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 90,
															"initialValue": {
																"arguments": [
																	{
																		"id": 87,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "566:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																			"typeString": "struct bigint memory"
																		}
																	},
																	{
																		"id": 88,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 66,
																		"src": "568:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																			"typeString": "struct bigint memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 86,
																	"name": "limb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "561:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_bigint_$5_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (struct bigint memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "561:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "548:22:0"
														},
														{
															"id": 134,
															"nodeType": "UncheckedBlock",
															"src": "585:280:0",
															"statements": [
																{
																	"expression": {
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 91,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 42,
																					"src": "615:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																						"typeString": "struct bigint memory"
																					}
																				},
																				"id": 94,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "617:5:0",
																				"memberName": "limbs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4,
																				"src": "615:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 95,
																			"indexExpression": {
																				"id": 93,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 66,
																				"src": "623:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "615:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 98,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 96,
																					"name": "limbA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 78,
																					"src": "628:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 97,
																					"name": "limbB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 85,
																					"src": "636:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "628:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 99,
																				"name": "carry",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 62,
																				"src": "644:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "628:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "615:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 102,
																	"nodeType": "ExpressionStatement",
																	"src": "615:34:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 103,
																					"name": "limbA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 78,
																					"src": "671:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 104,
																					"name": "limbB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 85,
																					"src": "679:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "671:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 106,
																				"name": "limbA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "687:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "671:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 110,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 108,
																								"name": "limbA",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 78,
																								"src": "697:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 109,
																								"name": "limbB",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 85,
																								"src": "705:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "697:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 113,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "719:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_uint256_$",
																											"typeString": "type(uint256)"
																										},
																										"typeName": {
																											"id": 112,
																											"name": "uint",
																											"nodeType": "ElementaryTypeName",
																											"src": "719:4:0",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_type$_t_uint256_$",
																											"typeString": "type(uint256)"
																										}
																									],
																									"id": 111,
																									"name": "type",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967269,
																									"src": "714:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 114,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "714:10:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_meta_type_t_uint256",
																									"typeString": "type(uint256)"
																								}
																							},
																							"id": 115,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "725:3:0",
																							"memberName": "max",
																							"nodeType": "MemberAccess",
																							"src": "714:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "697:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 117,
																							"name": "carry",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 62,
																							"src": "732:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 118,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "739:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "732:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "697:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 121,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "696:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "671:70:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 132,
																		"nodeType": "Block",
																		"src": "798:52:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 130,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 128,
																						"name": "carry",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 62,
																						"src": "821:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "30",
																						"id": 129,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "829:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "821:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 131,
																				"nodeType": "ExpressionStatement",
																				"src": "821:9:0"
																			}
																		]
																	},
																	"id": 133,
																	"nodeType": "IfStatement",
																	"src": "668:182:0",
																	"trueBody": {
																		"id": 127,
																		"nodeType": "Block",
																		"src": "742:52:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 123,
																						"name": "carry",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 62,
																						"src": "765:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "31",
																						"id": 124,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "773:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "765:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 126,
																				"nodeType": "ExpressionStatement",
																				"src": "765:9:0"
																			}
																		]
																	}
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 69,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 70,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "476:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																	"typeString": "struct bigint memory"
																}
															},
															"id": 71,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "478:5:0",
															"memberName": "limbs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "484:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "476:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "472:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 136,
												"initializationExpression": {
													"assignments": [
														66
													],
													"declarations": [
														{
															"constant": false,
															"id": 66,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "467:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 136,
															"src": "462:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 65,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "462:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 68,
													"initialValue": {
														"hexValue": "30",
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "462:8:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "492:3:0",
														"subExpression": {
															"id": 74,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "494:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 76,
													"nodeType": "ExpressionStatement",
													"src": "492:3:0"
												},
												"nodeType": "ForStatement",
												"src": "458:419:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 137,
														"name": "carry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "891:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "899:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "891:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 194,
												"nodeType": "IfStatement",
												"src": "888:308:0",
												"trueBody": {
													"id": 193,
													"nodeType": "Block",
													"src": "901:295:0",
													"statements": [
														{
															"assignments": [
																144
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 144,
																	"mutability": "mutable",
																	"name": "newLimbs",
																	"nameLocation": "930:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 193,
																	"src": "916:22:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 142,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 143,
																		"nodeType": "ArrayTypeName",
																		"src": "916:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 154,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"expression": {
																					"id": 148,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 42,
																					"src": "952:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																						"typeString": "struct bigint memory"
																					}
																				},
																				"id": 149,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "954:5:0",
																				"memberName": "limbs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4,
																				"src": "952:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "960:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "952:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "969:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "952:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "941:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (uint256[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 145,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "945:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 146,
																		"nodeType": "ArrayTypeName",
																		"src": "945:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "941:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "916:55:0"
														},
														{
															"assignments": [
																156
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 156,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "991:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 193,
																	"src": "986:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 155,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "986:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 157,
															"nodeType": "VariableDeclarationStatement",
															"src": "986:6:0"
														},
														{
															"body": {
																"id": 179,
																"nodeType": "Block",
																"src": "1056:61:0",
																"statements": [
																	{
																		"expression": {
																			"id": 177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 170,
																					"name": "newLimbs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 144,
																					"src": "1074:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 172,
																				"indexExpression": {
																					"id": 171,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 156,
																					"src": "1083:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1074:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 173,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 42,
																						"src": "1088:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																							"typeString": "struct bigint memory"
																						}
																					},
																					"id": 174,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1090:5:0",
																					"memberName": "limbs",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 4,
																					"src": "1088:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 176,
																				"indexExpression": {
																					"id": 175,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 156,
																					"src": "1096:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1088:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1074:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 178,
																		"nodeType": "ExpressionStatement",
																		"src": "1074:24:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 162,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "1017:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 163,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 42,
																			"src": "1021:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																				"typeString": "struct bigint memory"
																			}
																		},
																		"id": 164,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1023:5:0",
																		"memberName": "limbs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4,
																		"src": "1021:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1029:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1021:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1017:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 180,
															"initializationExpression": {
																"expression": {
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 158,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 156,
																		"src": "1012:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "30",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1014:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1012:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 161,
																"nodeType": "ExpressionStatement",
																"src": "1012:3:0"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1037:3:0",
																	"subExpression": {
																		"id": 167,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 156,
																		"src": "1039:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 169,
																"nodeType": "ExpressionStatement",
																"src": "1037:3:0"
															},
															"nodeType": "ForStatement",
															"src": "1007:110:0"
														},
														{
															"expression": {
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 181,
																		"name": "newLimbs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "1131:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 183,
																	"indexExpression": {
																		"id": 182,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 156,
																		"src": "1140:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1131:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 184,
																	"name": "carry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "1145:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1131:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "1131:19:0"
														},
														{
															"expression": {
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 187,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "1165:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																			"typeString": "struct bigint memory"
																		}
																	},
																	"id": 189,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1167:5:0",
																	"memberName": "limbs",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "1165:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 190,
																	"name": "newLimbs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "1175:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"src": "1165:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 192,
															"nodeType": "ExpressionStatement",
															"src": "1165:18:0"
														}
													]
												}
											}
										]
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "275:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "293:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "279:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
													"typeString": "struct bigint"
												},
												"typeName": {
													"id": 34,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 33,
														"name": "bigint",
														"nameLocations": [
															"279:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "279:6:0"
													},
													"referencedDeclaration": 5,
													"src": "279:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
														"typeString": "struct bigint"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "310:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "296:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
													"typeString": "struct bigint"
												},
												"typeName": {
													"id": 37,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 36,
														"name": "bigint",
														"nameLocations": [
															"296:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "296:6:0"
													},
													"referencedDeclaration": 5,
													"src": "296:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
														"typeString": "struct bigint"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "278:34:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "335:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
													"typeString": "struct bigint"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "bigint",
														"nameLocations": [
															"335:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "335:6:0"
													},
													"referencedDeclaration": 5,
													"src": "335:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
														"typeString": "struct bigint"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:17:0"
									},
									"scope": 237,
									"src": "266:937:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "1285:69:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 206,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "1303:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 207,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1311:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																		"typeString": "struct bigint memory"
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1313:5:0",
																"memberName": "limbs",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1311:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1319:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1311:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1303:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1345:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1303:43:0",
													"trueExpression": {
														"baseExpression": {
															"expression": {
																"id": 211,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "1328:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																	"typeString": "struct bigint memory"
																}
															},
															"id": 212,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1330:5:0",
															"memberName": "limbs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "1328:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 214,
														"indexExpression": {
															"id": 213,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "1336:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1328:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 217,
												"nodeType": "Return",
												"src": "1296:50:0"
											}
										]
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "limb",
									"nameLocation": "1222:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1241:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1227:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
													"typeString": "struct bigint"
												},
												"typeName": {
													"id": 198,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 197,
														"name": "bigint",
														"nameLocations": [
															"1227:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1227:6:0"
													},
													"referencedDeclaration": 5,
													"src": "1227:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
														"typeString": "struct bigint"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1249:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1244:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1244:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:29:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1279:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1279:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1278:6:0"
									},
									"scope": 237,
									"src": "1213:141:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "1420:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 228,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "1438:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 229,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "1442:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1438:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 232,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "1450:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1438:13:0",
													"trueExpression": {
														"id": 231,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "1446:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 227,
												"id": 234,
												"nodeType": "Return",
												"src": "1431:20:0"
											}
										]
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1373:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1382:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1377:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1390:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1385:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1385:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:16:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1414:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1414:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1413:6:0"
									},
									"scope": 237,
									"src": "1364:95:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 284,
							"src": "101:1363:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "C",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 283,
							"linearizedBaseContracts": [
								283
							],
							"name": "C",
							"nameLocation": "1477:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 241,
									"libraryName": {
										"id": 238,
										"name": "BigInt",
										"nameLocations": [
											"1492:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "1492:6:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1486:24:0",
									"typeName": {
										"id": 240,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 239,
											"name": "bigint",
											"nameLocations": [
												"1503:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "1503:6:0"
										},
										"referencedDeclaration": 5,
										"src": "1503:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
											"typeString": "struct bigint"
										}
									}
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "1541:184:0",
										"statements": [
											{
												"assignments": [
													246
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "1566:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "1552:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
															"typeString": "struct bigint"
														},
														"typeName": {
															"id": 245,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 244,
																"name": "bigint",
																"nameLocations": [
																	"1552:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5,
																"src": "1552:6:0"
															},
															"referencedDeclaration": 5,
															"src": "1552:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
																"typeString": "struct bigint"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "37",
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1586:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															}
														],
														"expression": {
															"id": 247,
															"name": "BigInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_BigInt_$237_$",
																"typeString": "type(library BigInt)"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1577:8:0",
														"memberName": "fromUint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "1570:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_bigint_$5_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct bigint memory)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1570:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
														"typeString": "struct bigint memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1552:36:0"
											},
											{
												"assignments": [
													254
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "y",
														"nameLocation": "1613:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "1599:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
															"typeString": "struct bigint"
														},
														"typeName": {
															"id": 253,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 252,
																"name": "bigint",
																"nameLocations": [
																	"1599:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5,
																"src": "1599:6:0"
															},
															"referencedDeclaration": 5,
															"src": "1599:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
																"typeString": "struct bigint"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 263,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1638:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 258,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "1638:4:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 257,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1633:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1633:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1644:3:0",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1633:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 255,
															"name": "BigInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1617:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_BigInt_$237_$",
																"typeString": "type(library BigInt)"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1624:8:0",
														"memberName": "fromUint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "1617:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_bigint_$5_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct bigint memory)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1617:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
														"typeString": "struct bigint memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1599:49:0"
											},
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "z",
														"nameLocation": "1673:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "1659:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
															"typeString": "struct bigint"
														},
														"typeName": {
															"id": 265,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 264,
																"name": "bigint",
																"nameLocations": [
																	"1659:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5,
																"src": "1659:6:0"
															},
															"referencedDeclaration": 5,
															"src": "1659:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
																"typeString": "struct bigint"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"arguments": [
														{
															"id": 269,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "1683:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																"typeString": "struct bigint memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																"typeString": "struct bigint memory"
															}
														],
														"expression": {
															"id": 267,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1677:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																"typeString": "struct bigint memory"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1679:3:0",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 196,
														"src": "1677:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_bigint_$5_memory_ptr_$_t_struct$_bigint_$5_memory_ptr_$returns$_t_struct$_bigint_$5_memory_ptr_$attached_to$_t_struct$_bigint_$5_memory_ptr_$",
															"typeString": "function (struct bigint memory,struct bigint memory) pure returns (struct bigint memory)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1677:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
														"typeString": "struct bigint memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1659:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1710:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"expression": {
																		"id": 273,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "1703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																			"typeString": "struct bigint memory"
																		}
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1705:4:0",
																	"memberName": "limb",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 219,
																	"src": "1703:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_bigint_$5_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_struct$_bigint_$5_memory_ptr_$",
																		"typeString": "function (struct bigint memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1703:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1703:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 272,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1696:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1696:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "1696:21:0"
											}
										]
									},
									"functionSelector": "26121ff0",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "f",
									"nameLocation": "1525:1:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1526:2:0"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1541:0:0"
									},
									"scope": 283,
									"src": "1516:209:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 284,
							"src": "1468:260:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1695:0"
				},
				"id": 0
			}
		}
	}
}