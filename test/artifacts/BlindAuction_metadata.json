{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "biddingTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "revealTime",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "beneficiaryAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AuctionEndAlreadyCalled",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "TooEarly",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "TooLate",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "highestBid",
						"type": "uint256"
					}
				],
				"name": "AuctionEnded",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "auctionEnd",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "beneficiary",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "blindedBid",
						"type": "bytes32"
					}
				],
				"name": "bid",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "biddingEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "bids",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "blindedBid",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "deposit",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ended",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "fake",
						"type": "bool"
					},
					{
						"internalType": "bytes32",
						"name": "secret",
						"type": "bytes32"
					}
				],
				"name": "generateBlindedBid",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBid",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBidder",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "revealEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "blindedBid",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "fake",
						"type": "bool"
					},
					{
						"internalType": "bytes32",
						"name": "secret",
						"type": "bytes32"
					}
				],
				"name": "verifyBlindedBid",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"generateBlindedBid(uint256,bool,bytes32)": {
					"details": "生成盲拍出价的哈希承诺",
					"params": {
						"fake": "是否为虚假出价（true表示虚假出价）",
						"secret": "用户的秘密值（至少8字节，建议使用bytes32而不是string）",
						"value": "出价金额（单位：wei）"
					},
					"returns": {
						"_0": "盲拍哈希值"
					}
				},
				"verifyBlindedBid(bytes32,uint256,bool,bytes32)": {
					"details": "验证盲拍出价",
					"params": {
						"blindedBid": "之前生成的盲拍哈希",
						"fake": "要验证的虚假出价标志",
						"secret": "要验证的秘密值",
						"value": "要验证的出价金额"
					},
					"returns": {
						"_0": "是否验证通过"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"auctionEnd()": {
					"notice": "结束拍卖并将最高出价发送给受益人。 "
				},
				"bid(bytes32)": {
					"notice": "以 `blindedBid` = keccak256(abi.encodePacked(value, fake, secret)) 的方式提交一个盲出价。 发送的以太币仅在出价在揭示阶段被正确揭示时才会退还。 如果与出价一起发送的以太币至少为 \"value\" 且 \"fake\" 不为真，则出价有效。 将 \"fake\" 设置为真并发送不准确的金额是隐藏真实出价的方式，但仍然满足所需的存款。 相同地址可以提交多个出价。"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"test/BlindAuction.sol": "BlindAuction"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"hardhat/console.sol": {
			"keccak256": "0xf2560b5386574153057104d19a9e68a32ee912cf23c0c8df1fe9a0607f42d543",
			"license": "MIT",
			"urls": [
				"bzz-raw://a63166e036b040826baa513772451a79925daa304b38749100efb089ac07cdc2",
				"dweb:/ipfs/QmUtMTxUFKU6a5oFXsEJnTPvb3QPb7GDDmSv5yZ1jFHDwR"
			]
		},
		"test/BlindAuction.sol": {
			"keccak256": "0xafd0a2062b3bb827134c1671869c782d08b5fb8ef952609bafd70b9e47cc6624",
			"license": "MIT",
			"urls": [
				"bzz-raw://7e5a5c2eae1f11cc955a03f27107c843b863a86c332b6bf02d9e2350a9c9bb68",
				"dweb:/ipfs/QmRRMUccjqMmFXtqsnevCUjFVuqXktWaPt1qr5tFrNApz1"
			]
		}
	},
	"version": 1
}